/*
---
name: _media-min()
category:
  - core/mixin
  - core/mixin/media-query
---
min-width media query

### scss
```scss
//
// @param  size|length  $size  width
//

.c-foo {
  @include _media-min(md) {
    ...
  }
}
```
*/

@mixin _media-min($size) {
  $prev_size: _prev-size-key($size);
  @if (0 == $size or (false == $prev_size and 'number' != type-of($size))) {
    @content;
  } @else {
    @media (min-width: _min($size)) {
      @content;
    }
  }
}

/*
---
name: _media-max()
category:
  - core/mixin
  - core/mixin/media-query
---
max-width media query

### scss
```scss
//
// @param  size|length  $size  width
//

.c-foo {
  @include _media-max(md) {
    ...
  }
}
```
*/

@mixin _media-max($size) {
  $next_size: _next-size-key($size);
  @if (false != $next_size) {
    @media (max-width: _max($size)) {
      @content;
    }
  } @else if (map-get($_sizes, $size)) {
    @content;
  } @else if ('number' == type-of($size)) {
    @media (max-width: _max($size)) {
      @content;
    }
  }
}

/*
---
name: _media-only()
category:
  - core/mixin
  - core/mixin/media-query
---
Specific size only media query

### scss
```scss
//
// @param  size|length  $size  width
//

.c-foo {
  @include _media-only(md) {
    ...
  }
}
```
*/

@mixin _media-only($size) {
  $prev_size: _prev-size-key($size);
  $next_size: _next-size-key($size);
  @if (false == $prev_size and false == $next_size) {
    @media (min-width: _min($size)) and (max-width: _max($size)) {
      @content;
    }
  } @else if (false == $prev_size) {
    @include _media-max($size) {
      @content;
    }
  } @else if (false == $next_size) {
    @include _media-min($size) {
      @content;
    }
  } @else {
    @media (min-width: _min($size)) and (max-width: _max($size)) {
      @content;
    }
  }
}

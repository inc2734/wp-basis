/*
---
name: _hamburger-btn()
category:
  - core/abstract
---
Abstract hamburger button component

### scss
```scss
.c-hamburger-btn {
  @include _hamburger-btn((
    height: 16px,
    width: 22px,
    bar-height: 2px,
    color: $_color-text,
  ));
}
```

### js
```js
import BasisHamburgerBtn from 'node_modules/sass-basis/src/js/_hamburger-btn.js';
new BasisHamburgerBtn({
  btn: '.c-hamburger-btn'
});
```

### html
```ejs
<div id="hamburger-btn" class="c-hamburger-btn" role="button" aria-expanded="false" aria-controls="drawer">
  <div class="c-hamburger-btn__bars">
    <div class="c-hamburger-btn__bar"></div>
    <div class="c-hamburger-btn__bar"></div>
    <div class="c-hamburger-btn__bar"></div>
  </div>
  <div class="c-hamburger-btn__label">MENU</div>
</div>

<nav id="drawer" aria-labelledby="hamburger-btn">...</nav>
```
*/

@mixin _hamburger-btn($params: ()) {
  $params: map-merge(
    (
      height: 16px,
      width: 22px,
      bar-height: 2px,
      color: $_color-text,
    ),
    $params
  );

  $height: map-get($params, 'height');
  $width: map-get($params, 'width');
  $bar-height: map-get($params, 'bar-height');
  $color: map-get($params, 'color');

  display: inline-block;
  cursor: pointer;
  text-align: center;

  &__bars {
    position: relative;
    display: inline-block;
    box-sizing: content-box;
    height: $height;
    width: $width;
  }

  &__bar {
    @include _position(absolute, null, 0, null, 0);
    display: block;
    background-color: $color; // for IE11
    background-color: _var-color-text();
    height: $bar-height;
    @include _transition(transform);

    &:nth-of-type(1) {
      top: 0;
    }

    &:nth-of-type(2) {
      top: ($height / 2 - $bar-height / 2);
    }

    &:nth-of-type(3) {
      top: ($height - $bar-height);
    }
  }

  &__label {
    font-family: "Arial Narrow", Verdana, sans-serif;
    font-size: 8px;
    line-height: 1;
  }
}

/*
---
name: _radio()
category:
  - core/abstract
  - core/abstract/form
---
Abstract radio button component

### scss
```scss
.c-radio {
  @include _radio((
    size: $_base-font-size-px,
  ));
}
```

### js
```js
import BasisRadio from 'node_modules/sass-basis/src/js/_radio.js';
new BasisRadio({
  radio: '.c-radio',
});
```

### html
```ejs
<label>
  <span class="c-radio" aria-checked="false">
    <input type="radio">
    <span class="c-radio__control"></span>
  </span>
  ...
</label>
```
*/

@mixin _radio($params: ()) {
  $params: map-merge(
    (
      size: $_base-font-size-px,
    ),
    $params
  );

  $z-index: 1;
  $size: map-get($params, 'size');
  $root: #{&};

  position: relative;
  display: inline-block;
  @include _square($size);

  > [type="radio"],
  &__control,
  &__control::before {
    @include _position(absolute, 0, null, null, 0);
    display: block;
    @include _square($size, 100%);
  }

  > [type="radio"] {
    z-index: $z-index;
    cursor: pointer;
    opacity: 0 !important;
    outline: 0;

    &:checked ~ #{$root}__control::after {
      opacity: 1;
    }
  }

  &__control {
    z-index: ($z-index - 1);

    &::before {
      content: '';
      background-color: #fff;
      border: 1px solid $_form-control-border-color;
    }

    &::after {
      @include _position(absolute, 50%, null, null, 50%);
      transform: translate(-50%, -50%);
      content: '';
      display: block;
      background-color: $_color-text;
      @include _square(($size / 2), 100%);
      opacity: 0;
    }
  }

  &:hover {
    #{$root}__control::before {
      border-color: $_form-control-border-color-hover;
    }
  }

  &:active,
  &:focus,
  &:focus-within,
  &[aria-checked="true"] {
    #{$root}__control::before {
      border-color: $_form-control-border-color-focus;
    }
  }
}
